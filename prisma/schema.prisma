// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TaxesType {
  id Int @id @default(autoincrement())

  type         String
  bid          Int
  Organization Organization[]
}

model Client {
  id            Int            @id @default(autoincrement())
  name          String
  organizations Organization[]
  dateCreate    DateTime       @default(now())
  inn           String?
  phone         String?
  email         String?
  clientType    ClientsType    @default(IP)
  TaxesPayment  TaxesPayment[]

  @@map("clients")
}

model Organization {
  id                           Int         @id @default(autoincrement())
  name                         String
  organizationInn              String      @unique
  organizationKpp              String
  organizationOgrn             String      @unique
  organizationPhysicalAddress  String?
  organizationJuridicalAddress String?
  ownerPosition                String
  inspection                   Inspections @relation(fields: [inspectionId], references: [id], onDelete: Cascade)
  inspectionId                 Int
  taxesType                    TaxesType   @relation(fields: [taxesTypeId], references: [id], onDelete: Cascade)
  taxesTypeId                  Int

  Client       Client?        @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId     Int?
  TaxesPayment TaxesPayment[]

  @@map("organizations")
}

model TaxesPayment {
  id              Int          @id @default(autoincrement())
  Client          Client       @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId        Int
  Organization    Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId  Int
  income          Float
  paymentDate     DateTime     @default(now())
  nextPaymentDate String
}

model User {
  id           Int         @id @default(autoincrement())
  name         String
  login        String      @unique
  password     String
  type         UsersType   @default(ADMIN)
  Inspections  Inspections @relation(fields: [inspectionId], references: [id], onDelete: Cascade)
  inspectionId Int

  @@map("users")
}

model Inspections {
  id           Int            @id @default(autoincrement())
  name         String
  code         String
  User         User[]
  Organization Organization[]
}

enum UsersType {
  ADMIN
  VIEWER
}

enum ClientsType {
  IP
  UL
  SE
}
